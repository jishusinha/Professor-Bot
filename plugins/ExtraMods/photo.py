from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from pyrogram import Client, filters


@Client.on_message(filters.photo & filters.private)
async def photo_handler(client, message):
    buttons = [[
        InlineKeyboardButton(text="B Ä…™…¢·¥õ ú", callback_data="bright"),
        InlineKeyboardButton(text="M…™x·¥á·¥Ö", callback_data="mix"),
        InlineKeyboardButton(text="ùñ° & ùñ∂", callback_data="b|w"),
        ],[
        InlineKeyboardButton(text="C…™ Ä·¥Ñ ü·¥á", callback_data="circle"),
        InlineKeyboardButton(text="B ü·¥ú Ä", callback_data="blur"),
        InlineKeyboardButton(text="B·¥è Ä·¥Ö·¥á Ä", callback_data="border"),
        ],[
        InlineKeyboardButton(text="S·¥õ…™·¥Ñ·¥ã·¥á Ä", callback_data="stick"),
        InlineKeyboardButton(text="R·¥è·¥õ·¥Ä·¥õ·¥á", callback_data="rotate"),
        InlineKeyboardButton(text="C·¥è…¥·¥õ Ä·¥Äs·¥õ", callback_data="contrast"),
        ],[
        InlineKeyboardButton(text="S·¥á·¥ò…™·¥Ä", callback_data="sepia"),
        InlineKeyboardButton(text="P·¥á…¥·¥Ñ…™ ü", callback_data="pencil"),
        InlineKeyboardButton(text="C·¥Ä Ä·¥õ·¥è·¥è…¥", callback_data="cartoon"),
        ],[
        InlineKeyboardButton(text="I…¥·¥†·¥á Ä·¥õ", callback_data="inverted"),
        InlineKeyboardButton(text="G ü…™·¥õ·¥Ñ ú", callback_data="glitch"),
        InlineKeyboardButton(text="R·¥á·¥ç·¥è·¥†·¥á ùñ°ùñ¶", callback_data="removebg"),
        ],[
        InlineKeyboardButton(text="C ü·¥ès·¥á", callback_data="close_data"),
    ]]
    try:
        await message.reply(text="S·¥á ü·¥á·¥Ñ·¥õ Y·¥è·¥ú Ä R·¥á«´·¥ú…™ Ä·¥á·¥Ö M·¥è·¥Ö·¥á F Ä·¥è·¥ç B·¥á ü·¥è·¥°", quote=True, reply_markup=InlineKeyboardMarkup(buttons))            
    except Exception as e:
        print(e)
        if "USER_IS_BLOCKED" in str(e): return           
        try: await message.reply_text(f"{e} \nS·¥è·¥ç·¥á·¥õ ú…™…¥…¢ W·¥á…¥·¥õ W Ä·¥è…¥…¢ !", quote=True)
        except Exception: return
